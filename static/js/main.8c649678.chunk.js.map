{"version":3,"sources":["components/Input.js","components/Buttons.js","components/ControlPanel.js","components/todoItem.js","components/TodoList.js","App.js","index.js"],"names":["Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","onSubmit","bind","assertThisInitialized","event","preventDefault","setState","_this2","react_default","a","createElement","className","placeholder","value","onChange","target","React","Component","Buttons","_ref","activeFilter","changeClass","href","onClick","e","activeTab","ControlPanel","list","clearDone","style","display","filter","item","done","length","components_Buttons","type","TodoItem","toDelete","toggled","id","concat","checked","htmlFor","title","TodoList","toggledAll","Fragment","map","todoItem","components_ControlPanel","App","addTodo","trim","prevState","toConsumableArray","lastId","index","findIndex","slice","_ref2","every","_objectSpread","targetId","innerText","components_Input","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8c649678.chunk.js","sourcesContent":["import React from 'react';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault()\n    const { onSubmit } = this.props;\n    const { text } = this.state;\n\n    onSubmit(text);\n    this.setState({\n      text: '',\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.onSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={text}\n            onChange={event => this.setState({ text: event.target.value })}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Input;","import React, {Component} from 'react';\n\nfunction Buttons({ activeFilter, changeClass, props }) {\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" onClick={(e) => activeFilter(e)} className={props.activeTab === 'All' ? 'selected' : 'unselected'}>All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\" onClick={(e) => activeFilter(e)} className={props.activeTab === 'Active' ? 'selected' : 'unselected'}>Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\" onClick={(e) => activeFilter(e)} className={props.activeTab === 'Completed' ? 'selected' : 'unselected'}>Completed</a>\n      </li>\n    </ul>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\nimport Buttons from './Buttons';\n\nfunction ControlPanel({ list, clearDone, activeFilter, changeClass, props }) {\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {list.filter(item => item.done === false).length}\n        items left\n      </span>\n\n      <Buttons activeFilter={activeFilter} changeClass={changeClass} props={props} />\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={clearDone}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\n\nexport default ControlPanel;\n","import React from 'react';\n\nfunction TodoItem({ item, toDelete, toggled }) {\n  return (\n    <li className={item.done ? 'completed' : ''}>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" id={ `todo-${item.id}` } onChange={() => toggled(item.id)} checked={item.done} />\n        <label htmlFor={ `todo-${item.id}` }>{ item.title }</label>\n        <button type=\"button\" className=\"destroy\" onClick={() => toDelete(item.id)} />\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport ControlPanel from './ControlPanel';\nimport TodoItem from \"./todoItem\";\n\nfunction TodoList({ list, toDelete, toggled, clearDone, toggledAll, activeFilter, changeClass, props }) {\n  return list.length > 0 ? (\n    <>\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" onChange={toggledAll} />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          { list.map(item => (\n            <TodoItem item={item} toDelete={toDelete} toggled={toggled} />\n          ))}\n        </ul>\n      </section>\n      <ControlPanel list={list} clearDone={clearDone} activeFilter={activeFilter} changeClass={changeClass} props={props} />\n    </>\n  ) : '';\n}\n\nexport default TodoList;\n","import React from 'react';\nimport Input from './components/Input';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [],\n      lastId: 0,\n      activeTab: '',\n    };\n    this.toggled = this.toggled.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.toDelete = this.toDelete.bind(this);\n  }\n\n  addTodo = (item) => {\n    if (item.trim() === '') {\n      return;\n    }\n\n    this.setState(prevState => ({\n      list: [...prevState.list, {\n        title: item,\n        done: false,\n        id: prevState.lastId + 1,\n      }],\n      lastId: prevState.lastId + 1,\n    }));\n  };\n\n  toDelete = (id) => {\n    this.setState(({list}) => {\n      const index = list.findIndex(item => item.id === id);\n      const slicedTodos = list.slice(0, index).concat(list.slice(index + 1));\n\n      return { list: slicedTodos };\n    });\n  };\n\n  toggledAll = () => {\n    this.setState(({ list }) => {\n      if (list.every(item => item.done === false)) {\n        const newList = list.map(item => ({\n          ...item,\n          done: true,\n        }));\n\n        return {\n          list: newList,\n        };\n      }\n\n      const newList =  list.map(item => ({\n        ...item,\n        done: false,\n      }));\n\n      return {\n        list: newList,\n      }\n    });\n  };\n\n  toggled = (targetId) => {\n    this.setState(prevState => ({\n      list: [...prevState.list.map((item) => {\n        if (targetId === item.id && item.done) {\n          return { ...item, done: false };\n        }\n\n        if (targetId === item.id && !item.done) {\n          return { ...item, done: true };\n        }\n\n        return item;\n\n      })],\n    }));\n  };\n\n  clearDone = (event) => {\n    this.setState(prevState => ({\n      ...prevState,\n      list: [...prevState.list].filter(item => !item.done),\n    }));\n  };\n\n  activeFilter = (e) => {\n    const tab = e.target;\n    const activeTab = tab.innerText;\n\n    switch (activeTab) {\n      case 'All':\n        this.setState(prevState => ({\n          ...prevState,\n          list: prevState.list,\n          activeTab: 'All',\n        }));\n        break;\n      case 'Active':\n        this.setState(prevState => ({\n          ...prevState,\n          list: prevState.list.filter(item => !item.done),\n          activeTab: 'Active',\n        }));\n        break;\n      case 'Completed':\n        this.setState(prevState => ({\n          ...prevState,\n          list: prevState.list.filter(item => item.done),\n          activeTab: 'Completed',\n        }));\n        break;\n      default:\n        this.setState(prevState => ({\n          ...prevState,\n          list: prevState.list,\n          activeTab: 'All',\n        }));\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Input onSubmit={this.addTodo} />\n\n        <TodoList\n          list={this.state.list}\n          toDelete={this.toDelete}\n          clearDone={this.clearDone}\n          toggled={this.toggled}\n          toggledAll={this.toggledAll}\n          activeFilter={this.activeFilter}\n          props={this.state}\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
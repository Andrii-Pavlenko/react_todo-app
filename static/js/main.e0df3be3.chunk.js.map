{"version":3,"sources":["components/Input.js","components/Buttons.js","components/ControlPanel.js","components/todoItem.js","components/TodoList.js","App.js","index.js"],"names":["Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","onSubmit","bind","assertThisInitialized","event","preventDefault","addTodo","setState","localStorage","setItem","JSON","stringify","list","lastId","_this2","react_default","a","createElement","className","placeholder","value","onChange","target","React","Component","Buttons","_ref","activeFilter","href","onClick","activeTab","ControlPanel","clearDone","style","display","filter","item","done","length","components_Buttons","find","type","TodoItem","_React$createElement","toDelete","toggled","editText","editEnter","defineProperty","editMode","id","concat","checked","htmlFor","title","autoFocus","defaultValue","onKeyDown","TodoList","toggledAll","Fragment","map","todoItem","components_ControlPanel","App","trim","prevState","toConsumableArray","putInLocalStorage","_ref2","every","_objectSpread","targetId","getFromLocalStorage","lastList","parse","getItem","lastLastId","itemToEdit","key","match","join","_this$getFromLocalSto","filtredList","components_Input","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e0df3be3.chunk.js","sourcesContent":["import React from 'react';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const { addTodo } = this.props;\n    const { text } = this.state;\n\n    addTodo(text);\n    this.setState({\n      text: '',\n    },\n    localStorage.setItem('list', JSON.stringify(this.state.list)),\n    localStorage.setItem('lastId', JSON.stringify(this.state.lastId)));\n  }\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.onSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={text}\n            onChange={event => this.setState({ text: event.target.value })}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\n\nfunction Buttons({ activeFilter, props }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          onClick={() => activeFilter('All')}\n          className={props.activeTab === 'All' ? 'selected' : 'unselected'}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => activeFilter('Active')}\n          className={props.activeTab === 'Active' ? 'selected' : 'unselected'}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => activeFilter('Completed')}\n          className={props.activeTab === 'Completed'\n            ? 'selected' : 'unselected'}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\nimport Buttons from './Buttons';\n\nfunction ControlPanel({\n  list, clearDone, activeFilter, props,\n}) {\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {list.filter(item => item.done === false).length}\n        items left\n      </span>\n\n      <Buttons\n        activeFilter={activeFilter}\n        props={props}\n      />\n\n      {list.find(item => item.done)\n        ? (\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={clearDone}\n          >\n            Clear completed\n          </button>\n        ) : ''}\n    </footer>\n  );\n}\n\nexport default ControlPanel;\n","import React from 'react';\n\nfunction TodoItem({\n  item, toDelete, toggled, editText, editEnter,\n}) {\n  return (\n    <li\n      className={item.done ? 'completed' : ''}\n      className={item.editMode ? 'editing' : ''}\n      onDoubleClick={() => editText(item)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${item.id}`}\n          onChange={() => toggled(item.id)}\n          checked={item.done}\n        />\n        <label htmlFor={`todo-${item.id}`}>{ item.title }</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => toDelete(item.id)}\n        />\n      </div>\n      {item.editMode\n        ? (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            autoFocus={true}\n            defaultValue={item.title}\n            onKeyDown={event => editEnter(event)}\n            id={`todo-${item.id}`}\n          />\n        ) : ''}\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport ControlPanel from './ControlPanel';\nimport TodoItem from './todoItem';\n\nfunction TodoList({\n  list,\n  toDelete,\n  toggled,\n  clearDone,\n  toggledAll,\n  activeFilter,\n  props,\n  editText,\n  editEnter,\n}) {\n  return (\n    <>\n\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={toggledAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          { list.map(item => (\n            <TodoItem\n              item={item}\n              toDelete={toDelete}\n              toggled={toggled}\n              editText={editText}\n              editEnter={editEnter}\n            />\n          ))}\n        </ul>\n      </section>\n\n      {list.length > 0 ? (\n        <ControlPanel\n          list={list}\n          clearDone={clearDone}\n          activeFilter={activeFilter}\n          props={props}\n        />\n      ) : ''}\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport Input from './components/Input';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [],\n      lastId: 0,\n      activeTab: '',\n    };\n  }\n\n  componentDidMount() {\n    const { lastList, lastLastId } = this.getFromLocalStorage();\n\n    this.setState({\n      list: lastList,\n      lastId: lastLastId,\n    });\n  }\n\n  addTodo = (item) => {\n    if (item.trim() === '') {\n      return;\n    }\n\n    this.setState(prevState => ({\n      list: [...prevState.list, {\n        title: item,\n        done: false,\n        id: prevState.lastId + 1,\n        editMode: false,\n      }],\n      lastId: prevState.lastId + 1,\n    }),\n    this.putInLocalStorage);\n  };\n\n  toDelete = (id) => {\n    this.setState(({ list }) => {\n      const slicedTodos = list.filter(item => item.id !== id);\n\n      return { list: slicedTodos };\n    },\n    this.putInLocalStorage);\n  };\n\n  toggledAll = () => {\n    this.setState(({ list }) => {\n      if (list.every(item => item.done === false)) {\n        const newList = list.map(item => ({\n          ...item,\n          done: true,\n        }));\n\n        return {\n          list: newList,\n        };\n      }\n\n      const newList = list.map(item => ({\n        ...item,\n        done: false,\n      }));\n\n      return {\n        list: newList,\n      };\n    },\n    this.putInLocalStorage);\n  };\n\n  toggled = (targetId) => {\n    this.setState(prevState => ({\n      list: [...prevState.list.map((item) => {\n        if (targetId === item.id && item.done) {\n          return { ...item, done: false };\n        }\n\n        if (targetId === item.id && !item.done) {\n          return { ...item, done: true };\n        }\n\n        return item;\n      })],\n    }),\n    this.putInLocalStorage);\n  };\n\n  clearDone = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      list: [...prevState.list].filter(item => !item.done),\n    }),\n    this.putInLocalStorage);\n  };\n\n  activeFilter = (filter) => {\n\n    switch (filter) {\n      case 'All':\n        this.setState(prevState => ({\n          ...prevState,\n          activeTab: 'All',\n        }),\n        this.putInLocalStorage);\n        break;\n      case 'Active':\n        this.setState(prevState => ({\n          ...prevState,\n          activeTab: 'Active',\n        }),\n        this.putInLocalStorage);\n        break;\n      case 'Completed':\n        this.setState(prevState => ({\n          ...prevState,\n          activeTab: 'Completed',\n        }),\n        this.putInLocalStorage);\n        break;\n      default:\n        this.setState(prevState => ({\n          ...prevState,\n          activeTab: 'All',\n        }),\n        this.putInLocalStorage);\n        break;\n    }\n  };\n\n  putInLocalStorage = () => {\n    localStorage.setItem('list', JSON.stringify(this.state.list));\n    localStorage.setItem('lastId', JSON.stringify(this.state.lastId));\n  };\n\n  getFromLocalStorage = () => {\n    const list = JSON.parse(localStorage.getItem('list'));\n    const lastId = JSON.parse(localStorage.getItem('lastId'));\n\n    return ({\n      lastList: list || [],\n      lastLastId: lastId || 0,\n    });\n  };\n\n  editText = (itemToEdit) => {\n    this.setState(prevState => ({\n      list: [...prevState.list.map((item) => {\n        if (itemToEdit.id === item.id && item.editMode) {\n          return { ...item, editMode: false };\n        }\n\n        if (itemToEdit.id === item.id && !item.editMode) {\n          return { ...item, editMode: true };\n        }\n\n        return item;\n      })],\n    }),\n    this.putInLocalStorage);\n  };\n\n  editEnter = (event) => {\n    const { key, target } = event;\n    const text = target.value;\n    const id = +(target.id.match(/[0-9]/g).join(''));\n\n    if (key === 'Enter' && text.trim() !== '') {\n      this.setState(prevState => ({\n        list: [...prevState.list.map((item) => {\n          if (id === item.id) {\n            return {\n              ...item,\n              editMode: false,\n              title: text,\n              id: prevState.lastId + 1,\n              done: false,\n            };\n          }\n\n          return item;\n        })],\n        lastId: prevState.lastId + 1,\n      }),\n      this.putInLocalStorage);\n    }\n  }\n\n  render() {\n    let filtredList;\n\n    switch (this.state.activeTab) {\n      case 'All':\n        filtredList = this.state.list;\n        break;\n      case 'Active':\n        filtredList = this.state.list.filter(item => !item.done);\n        break;\n      case 'Completed':\n        filtredList = this.state.list.filter(item => item.done);\n        break;\n      default:\n        filtredList = this.state.list;\n        break;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Input addTodo={this.addTodo} />\n\n        <TodoList\n          list={filtredList}\n          toDelete={this.toDelete}\n          clearDone={this.clearDone}\n          toggled={this.toggled}\n          toggledAll={this.toggledAll}\n          activeFilter={this.activeFilter}\n          props={this.state}\n          editText={this.editText}\n          editEnter={this.editEnter}\n          addTodo={this.addTodo}\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}